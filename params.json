{"body":"### JSON Test.com\r\n\r\nJSON Test.com is a testing platform for programs utilizing JavaScript Object Notation (JSON). To use, just make a request to _servicename_.jsontest.com. For example, calling [http://ip.jsontest.com](http://ip.jsontest.com) will return your IP address in JSON-formatted form. JSON Test supports a bunch of services, which are listed below (more coming soon).\r\n\r\nWe also support the callback parameter for AJAX/JSONP web applications. Just append ?callback=function to the end of the JSONTest URL. For example, calling [http://ip.jsontest.com/?callback=someFunction](http://ip.jsontest.com/?callback=someFunction) will return your IP address, inside a JSON object, wrapped in the function _someFunction_.\r\n\r\nComments or ideas? Open a new issue in the GitHub issue tracker (see the GitHub repository link above).\r\n\r\n# Echo JSON\r\n\r\nReturns a JSON object defined by a REST-style URL. Quick example: a request to [http://echo.jsontest.com/key/value/one/two](http://echo.jsontest.com/key/value/one/two) will return the following JSON:\r\n\r\n```json\r\n{\r\n   \"one\": \"two\",\r\n   \"key\": \"value\"\r\n}\r\n```\r\n\r\nAs noted above, you can wrap this JSON object for AJAX/JSONP web applications by defining a callback parameter.\r\n\r\n# Date & Time\r\n\r\nSends back the date and time in JSON form (dates and times are formatted for human-suitable output, and reflect the time at GMT, Greenwich Mean Time).\r\n\r\nExample: A request to [http://date.jsontest.com/](http://date.jsontest.com/) will return JSON that looks like the following:\r\n\r\n```json\r\n{\r\n   \"time\": \"08:31:19 PM\",\r\n   \"date\": \"05-12-2012\"\r\n}\r\n```\r\n\r\nAs with the previous Echo JSON service, you can wrap the request in a callback, for AJAX/JSONP services. For example, you can call [http://date.jsontest.com/?callback=showDate](http://date.jsontest.com/?callback=showDate) to retrieve the date/time JSON, wrapped in a function called _showDate_.\r\n\r\n# IP Address\r\n\r\nReturns the requester's IP address: [http://ip.jsontest.com](http://ip.jsontest.com)\r\n\r\n# Headers\r\n\r\nReturns the HTTP request headers received from the client. A request to [http://headers.jsontest.com/](http://headers.jsontest.com/) will return a JSON object similar to this:\r\n\r\n```json\r\n{\r\n   \"Accept-Language\": \"en-US,en;q=0.8\",\r\n   \"Host\": \"headers.jsontest.com\",\r\n   \"Accept-Charset\": \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\",\r\n   \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"\r\n}\r\n```\r\n\r\n# Arbitrary Code (Javascript Alerts)\r\n\r\nAJAX/JSONP web applications can request not only JSON objects, but Javascript code as well. A request to [http://code.jsontest.com/](http://code.jsontest.com/) sends back the below Javascript code:\r\n\r\n```javascript\r\nalert(\"IP Address: Your IP Address\"); \r\nalert(\"Browser: Mozilla/5.0 (Windows NT 5.1)... User-Agent string here\");\r\n```\r\n\r\nNote that this test will not use callbacks.\r\n\r\n# Validation\r\n\r\nValidates a JSON object against the org.json parser. To use, tack a JSON string to a json parameter, as in: [http://validate.jsontest.com/?validate={\"key\":\"value\"}](http://validate.jsontest.com/?json={\"key\":\"value\"}); this returns the following JSON:\r\n\r\n```json\r\n{\r\n   \"empty\": false,\r\n   \"validate\": true,\r\n   \"size\": 1\r\n}\r\n```\r\n\r\nThe size parameter counts the number of top level keys inside the JSON object.\r\n\r\nIf invalid JSON is passed in (we'll remove an apostrophe in the value [http://validate.jsontest.com/?validate={\"key\":value\"}](http://validate.jsontest.com/?validate={\"key\":value\"}), then the returned JSON object will note that the parsing failed, and the reason why (as given by the org.json parser).\r\n\r\n```json\r\n{\r\n   \"error\": \"Expected a ',' or '}' at 13 [character 14 line 1]\",\r\n   \"validate\": false\r\n}\r\n```\r\n\r\n# Miscellaneous Notes\r\n\r\nNote that this application is in its' testing stages, and functionality may change without warning.\r\n","name":"JSON Test","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"testing for JSON applications"}